name: Lint
on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: install black
        run: pip install black
      - name: set black config dir
        run: echo "BLACK_CONFIG_PATH=./config/pyproject.toml" >> $GITHUB_ENV
      - name: check illegal format
        id: check_format
        continue-on-error: true
        run: |
          git diff origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} --name-only --diff-filter=A -- '*.py' | xargs black --check --verbose
          echo $?
        if: $BLACK_CONFIG_FORMAT == ''
      - name: check illegal format with config
        id: check_format_with_config
        continue-on-error: true
        run: |
          git diff origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} --name-only --diff-filter=A -- '*.py' | xargs black --check --verbose --config $BLACK_CONFIG_PATH
          echo $?
        if: ${{ $BLACK_CONFIG_FORMAT != '' }}
      - name: exit if no problem format
        run: exit 0
        if: (steps.check_format.outcome == 'success' || steps.check_format_with_config.outcome == 'success')
      - name: set branch suffix
        env:
          TZ: 'Asia/Tokyo'
        run: echo "CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
        if: (steps.check_format.outcome == 'failure' || steps.check_format_with_config.outcome == 'failure')
      - name: apply black
        run: git diff origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} --name-only --diff-filter=A -- '*.py' | xargs black -q
        if: >-
          (steps.check_format.outcome == 'failure' || steps.check_format_with_config.outcome == 'failure') && 
          $BLACK_CONFIG_FORMAT == ''
      - name: apply black with config
        run: git diff origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} --name-only --diff-filter=A -- '*.py' | xargs black -q --config $BLACK_CONFIG_PATH
        if: >-
          ${{ (steps.check_format.outcome == 'failure' || steps.check_format_with_config.outcome == 'failure') &&
          ${{ $BLACK_CONFIG_FORMAT != '' }}
      - name: commit fix format
        uses: EndBug/add-and-commit@v9
        with:
          new_branch: fix_${{github.head_ref}}_${{ env.CURRENT_DATETIME }}
          message: fix format
          push: true
          add: .
        if: (steps.check_format.outcome == 'failure' || steps.check_format_with_config.outcome == 'failure') 
      - name: create pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: fix_${{github.head_ref}}_${{ env.CURRENT_DATETIME }}
          destination_branch: ${{github.head_ref}}
          pr_title: fix format ${{ env.PR_TITLE }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: (steps.check_format.outcome == 'failure' || steps.check_format_with_config.outcome == 'failure') 
